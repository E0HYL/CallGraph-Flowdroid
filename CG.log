=========CG begins=========
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.EClipsActivity$UIConfigurationReceiver dummyMainMethod_com_eclips_EClipsActivity$UIConfigurationReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.update.UpdateConfigurationAlarmReceiver dummyMainMethod_com_eclips_update_UpdateConfigurationAlarmReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.AboutEClips dummyMainMethod_com_eclips_optionsMenu_AboutEClips(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.MessagingInboxActivity dummyMainMethod_com_eclips_optionsMenu_MessagingInboxActivity(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.Support dummyMainMethod_com_eclips_optionsMenu_Support(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.messaging.MessagingBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBroadcastReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.DebugReceiver dummyMainMethod_com_eclips_DebugReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.TermsOfService dummyMainMethod_com_eclips_optionsMenu_TermsOfService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.SmsReceiver dummyMainMethod_com_eclips_SmsReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.Configuration dummyMainMethod_com_eclips_optionsMenu_Configuration(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.uiconfig.UIConfigurationAlarmReceiver dummyMainMethod_com_eclips_uiconfig_UIConfigurationAlarmReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.DateOfInstallation dummyMainMethod_com_eclips_optionsMenu_DateOfInstallation(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.Help dummyMainMethod_com_eclips_optionsMenu_Help(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.messaging.MessagingBootBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBootBroadcastReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.main.EClipsMainBroadcastReceiver dummyMainMethod_com_eclips_main_EClipsMainBroadcastReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.messaging.TimeChangedReceiver dummyMainMethod_com_eclips_messaging_TimeChangedReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.optionsMenu.Version dummyMainMethod_com_eclips_optionsMenu_Version(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <dummyMainClass: com.eclips.EClipsActivity$UpdateAvailableReceiver dummyMainMethod_com_eclips_EClipsActivity$UpdateAvailableReceiver(android.content.Intent)>
<dummyMainClass: com.eclips.EClipsActivity$UpdateAvailableReceiver dummyMainMethod_com_eclips_EClipsActivity$UpdateAvailableReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$UpdateAvailableReceiver: void <init>(com.eclips.EClipsActivity)>
<dummyMainClass: com.eclips.EClipsActivity$UpdateAvailableReceiver dummyMainMethod_com_eclips_EClipsActivity$UpdateAvailableReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$UpdateAvailableReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.EClipsActivity$UpdateAvailableReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void access$600(com.eclips.EClipsActivity,int,int,java.lang.String)>
<com.eclips.EClipsActivity$UpdateAvailableReceiver: void <init>(com.eclips.EClipsActivity)>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.EClipsActivity$UpdateAvailableReceiver dummyMainMethod_com_eclips_EClipsActivity$UpdateAvailableReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void <init>()>
<com.eclips.EClipsActivity: void <init>()>   ==>   <com.eclips.EClipsActivity$1: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$1: void <init>(com.eclips.EClipsActivity)>   ==>   <android.content.BroadcastReceiver: void <init>()>
<com.eclips.EClipsActivity: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Version dummyMainMethod_com_eclips_optionsMenu_Version(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Version: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Version dummyMainMethod_com_eclips_optionsMenu_Version(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <java.lang.String: void <clinit>()>
<java.lang.Integer: void <clinit>()>   ==>   <java.lang.Integer: void <clinit>()>
<java.lang.String: void <clinit>()>   ==>   <java.lang.String: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)>   ==>   <java.lang.Exception: void <init>()>
<java.lang.Exception: void <init>()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>()>   ==>   <java.lang.Throwable: void <init>()>
<java.lang.Throwable: void <init>()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Throwable: void <init>()>   ==>   <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()>   ==>   <java.lang.Object: void finalize()>
<java.lang.Object: void finalize()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: void <init>()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.text.method.ScrollingMovementMethod: void <init>()>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.Version: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.Version: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.messaging.TimeChangedReceiver dummyMainMethod_com_eclips_messaging_TimeChangedReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.TimeChangedReceiver: void <init>()>
<dummyMainClass: com.eclips.messaging.TimeChangedReceiver dummyMainMethod_com_eclips_messaging_TimeChangedReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.TimeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.messaging.TimeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.TimeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.messaging.MessagingIntentQueue: void <clinit>()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.TimeChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void invalidate()>
<com.eclips.messaging.MessagingIntentQueue: void invalidate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void save()>
<com.eclips.messaging.MessagingIntentQueue: void save()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void save()>   ==>   <com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingIntentQueue: void save()>   ==>   <com.eclips.messaging.MessagingIntentQueue: org.json.JSONArray toJSONArray()>
<com.eclips.messaging.MessagingIntentQueue: void save()>   ==>   <org.json.JSONArray: java.lang.String toString()>
<org.json.JSONArray: java.lang.String toString()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: org.json.JSONArray toJSONArray()>   ==>   <org.json.JSONArray: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: org.json.JSONArray toJSONArray()>   ==>   <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: void <init>()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: org.json.JSONArray toJSONArray()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Iterator iterator()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date getCurrentTime()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date getCurrentTime()>   ==>   <java.util.Date: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void <init>()>   ==>   <java.util.LinkedList: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void <init>()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void load()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <java.util.Collections: void sort(java.util.List)>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <java.util.Collections: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <org.json.JSONException: void <init>(java.lang.String)>
<org.json.JSONException: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONException: void <init>(java.lang.String)>   ==>   <java.lang.Exception: void <init>()>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setId(java.lang.String)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setShortCode(java.lang.String)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimestampOffset(long,java.util.Date)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setText(java.lang.String)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setSendSMS(boolean)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setSendPing(boolean)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimestampOffset(long)>
<com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimeComputed(long)>
<com.eclips.messaging.MessagingIntent: void setTimestampOffset(long,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimestampOffset(long)>
<com.eclips.messaging.MessagingIntent: void setTimestampOffset(long,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimeComputed(long,java.util.Date)>
<com.eclips.messaging.MessagingIntent: void setTimeComputed(long,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void setTimeComputed(long)>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <org.json.JSONArray: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <org.json.JSONArray: int length()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: int length()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONArray: void <init>(java.lang.String)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.InvalidMessagingConfiguration: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.InvalidMessagingConfiguration: void <init>(java.lang.Throwable)>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.InvalidMessagingConfiguration: void <init>(java.lang.Throwable)>
<com.eclips.messaging.InvalidMessagingConfiguration: void <init>(java.lang.Throwable)>   ==>   <java.lang.Exception: void <init>(java.lang.Throwable)>
<java.lang.Exception: void <init>(java.lang.Throwable)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>(java.lang.Throwable)>   ==>   <java.lang.Throwable: void <init>()>
<com.eclips.messaging.InvalidMessagingConfiguration: void <init>(java.lang.String)>   ==>   <java.lang.Exception: void <init>(java.lang.String)>
<java.lang.Exception: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Exception: void <init>(java.lang.String)>   ==>   <java.lang.Throwable: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>
<com.eclips.messaging.MessagingIntentQueue: void load()>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.messaging.TimeChangedReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.main.EClipsMainBroadcastReceiver dummyMainMethod_com_eclips_main_EClipsMainBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainBroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.main.EClipsMainBroadcastReceiver dummyMainMethod_com_eclips_main_EClipsMainBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void acquireLock(android.content.Context)>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.main.EClipsMainQueue: void <clinit>()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainService: void acquireLock(android.content.Context)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void acquireLock(android.content.Context)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.main.EClipsMainQueue: void addToTasks(android.content.Intent)>
<com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>   ==>   <com.eclips.main.EClipsMainQueue: void <init>()>
<com.eclips.main.EClipsMainQueue: void <init>()>   ==>   <java.util.HashMap: void <init>()>
<com.eclips.main.EClipsMainQueue: void <init>()>   ==>   <java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<com.eclips.main.EClipsMainQueue: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: java.lang.String getAction()>
<com.eclips.main.EClipsMainBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.main.EClipsMainBroadcastReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingBootBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBootBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingBootBroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingBootBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBootBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void acquireLock(android.content.Context)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void acquireLock(android.content.Context)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void acquireLock(android.content.Context)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: java.lang.String getAction()>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.eclips.messaging.MessagingBootBroadcastReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Help dummyMainMethod_com_eclips_optionsMenu_Help(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Help: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Help dummyMainMethod_com_eclips_optionsMenu_Help(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void loadUrl(java.lang.String)>
<com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Help: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.Help: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.DateOfInstallation dummyMainMethod_com_eclips_optionsMenu_DateOfInstallation(android.content.Intent)>   ==>   <com.eclips.optionsMenu.DateOfInstallation: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.DateOfInstallation dummyMainMethod_com_eclips_optionsMenu_DateOfInstallation(android.content.Intent)>   ==>   <com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.util.Locale: void <clinit>()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.util.Locale: java.util.Locale getDefault()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <java.util.Date: void <init>()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.text.method.ScrollingMovementMethod: void <init>()>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.DateOfInstallation: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.DateOfInstallation: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>
<dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>
<com.eclips.messaging.MessagingManagerService: void <init>()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingManagerService: void <init>()>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void releaseLock()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void releaseLock()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <java.util.Date: void <init>()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void triggeredUpdate()>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>
<com.eclips.messaging.MessagingManagerService: void triggeredUpdate()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <com.eclips.messaging.MessagingManagerService: void setAlarm(long)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <java.lang.Long: void <clinit>()>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <java.lang.Long: java.lang.Long valueOf(long)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.app.PendingIntent: void <clinit>()>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <java.lang.String: void <clinit>()>
<java.lang.Long: void <clinit>()>   ==>   <java.lang.Long: void <clinit>()>
<java.lang.Long: java.lang.Long valueOf(long)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.messaging.MessagingManagerService: void setAlarm(long)>   ==>   <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <android.app.Service: android.app.Application getApplication()>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <android.app.Service: android.app.Application getApplication()>
<com.eclips.messaging.MessagingManagerService: void triggeredUpdate()>   ==>   <android.app.Service: android.app.Application getApplication()>
<com.eclips.messaging.MessagingManagerService: void <init>()>   ==>   <android.app.IntentService: void <init>(java.lang.String)>
<dummyMainClass: com.eclips.uiconfig.UIConfigurationAlarmReceiver dummyMainMethod_com_eclips_uiconfig_UIConfigurationAlarmReceiver(android.content.Intent)>   ==>   <com.eclips.uiconfig.UIConfigurationAlarmReceiver: void <init>()>
<dummyMainClass: com.eclips.uiconfig.UIConfigurationAlarmReceiver dummyMainMethod_com_eclips_uiconfig_UIConfigurationAlarmReceiver(android.content.Intent)>   ==>   <com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationAlarmReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Configuration dummyMainMethod_com_eclips_optionsMenu_Configuration(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Configuration$1: void <init>(com.eclips.optionsMenu.Configuration)>
<dummyMainClass: com.eclips.optionsMenu.Configuration dummyMainMethod_com_eclips_optionsMenu_Configuration(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Configuration$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.eclips.optionsMenu.Configuration$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.Configuration$1: void <init>(com.eclips.optionsMenu.Configuration)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Configuration dummyMainMethod_com_eclips_optionsMenu_Configuration(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Configuration: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Configuration dummyMainMethod_com_eclips_optionsMenu_Configuration(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.Configuration$1: void <init>(com.eclips.optionsMenu.Configuration)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.eclips.optionsMenu.Configuration: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: android.widget.ListView getListView()>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.util.ArrayList: void <init>(int)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.util.ArrayList: boolean add(java.lang.Object)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.eclips.optionsMenu.Configuration: java.util.ArrayList formatCurrentConfiguration(android.content.SharedPreferences)>   ==>   <java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>
<com.eclips.optionsMenu.Configuration: void <init>()>   ==>   <android.app.ListActivity: void <init>()>
<dummyMainClass: com.eclips.SmsReceiver dummyMainMethod_com_eclips_SmsReceiver(android.content.Intent)>   ==>   <com.eclips.SmsReceiver: void <init>()>
<dummyMainClass: com.eclips.SmsReceiver dummyMainMethod_com_eclips_SmsReceiver(android.content.Intent)>   ==>   <com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingInbox: com.eclips.messaging.MessagingInbox getInstance()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: java.util.Date getDate()>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: java.lang.String getSender()>
<com.eclips.messaging.MessagingReceivedMessage: java.lang.String toString()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: java.lang.String getText()>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <com.eclips.messaging.MessagingInbox: void save()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <com.eclips.messaging.MessagingInbox: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingInbox: android.content.SharedPreferences getPreferences()>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingInbox: void save()>   ==>   <com.eclips.messaging.MessagingInbox: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>   ==>   <java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingInbox: com.eclips.messaging.MessagingInbox getInstance()>   ==>   <com.eclips.messaging.MessagingInbox: void <init>()>
<com.eclips.messaging.MessagingInbox: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingInbox: void <init>()>   ==>   <com.eclips.messaging.MessagingInbox: void load()>
<com.eclips.messaging.MessagingInbox: void load()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.messaging.MessagingInbox: void load()>   ==>   <com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>
<com.eclips.messaging.MessagingInbox: void load()>   ==>   <com.eclips.messaging.MessagingInbox: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <init>()>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setDate(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setSender(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: com.eclips.messaging.MessagingReceivedMessage fromString(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setText(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: void setDate(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <clinit>()>
<com.eclips.messaging.MessagingReceivedMessage: void setDate(java.lang.String)>   ==>   <java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: void setDate(java.lang.String)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setDate(java.util.Date)>
<com.eclips.messaging.MessagingReceivedMessage: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingInbox: void load()>   ==>   <java.util.LinkedList: void <init>()>
<com.eclips.messaging.MessagingInbox: void load()>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void <init>(android.telephony.SmsMessage)>
<com.eclips.messaging.MessagingReceivedMessage: void <init>(android.telephony.SmsMessage)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingReceivedMessage: void <init>(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setText(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: void <init>(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setSender(java.lang.String)>
<com.eclips.messaging.MessagingReceivedMessage: void <init>(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setDate(long)>
<com.eclips.messaging.MessagingReceivedMessage: void setDate(long)>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.messaging.MessagingReceivedMessage: void setDate(long)>   ==>   <com.eclips.messaging.MessagingReceivedMessage: void setDate(java.util.Date)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.os.Bundle getExtras()>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.content.Intent addFlags(int)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>
<com.eclips.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.BroadcastReceiver: void abortBroadcast()>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingReports: com.eclips.messaging.MessagingReports getInstance()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Set getShortCodes()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.util.AbstractCollection: java.lang.String toString()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.util.HashSet: boolean contains(java.lang.Object)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Set getShortCodes()>   ==>   <java.util.HashSet: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Set getShortCodes()>   ==>   <java.util.HashSet: boolean add(java.lang.Object)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Set getShortCodes()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Iterator iterator()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <com.eclips.messaging.MessagingReports: java.util.Set getShortCodes()>
<com.eclips.messaging.MessagingReports: java.util.Set getShortCodes()>   ==>   <java.util.HashSet: void <init>()>
<com.eclips.messaging.MessagingReports: java.util.Set getShortCodes()>   ==>   <java.util.HashSet: boolean add(java.lang.Object)>
<com.eclips.messaging.MessagingReports: java.util.Set getShortCodes()>   ==>   <com.eclips.messaging.MessagingReports: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingReports: com.eclips.messaging.MessagingReports getInstance()>   ==>   <com.eclips.messaging.MessagingReports: void <init>()>
<com.eclips.messaging.MessagingReports: void <init>()>   ==>   <java.util.LinkedList: void <init>()>
<com.eclips.messaging.MessagingReports: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingReports: void <init>()>   ==>   <com.eclips.messaging.MessagingReports: void load()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <java.lang.Throwable: void printStackTrace()>
<java.lang.Throwable: void printStackTrace()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setId(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setShortCode(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setTimestamp(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setText(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setStatus(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setShouldSendPing(boolean)>
<com.eclips.messaging.MessagingReport: void <init>(org.json.JSONObject)>   ==>   <com.eclips.messaging.MessagingReport: void setShouldSendAsSms(boolean)>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <org.json.JSONArray: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <org.json.JSONArray: int length()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <com.eclips.messaging.MessagingReports: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <com.eclips.messaging.MessagingReports: void save()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <com.eclips.messaging.MessagingReports: void save()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <com.eclips.messaging.MessagingReports: void save()>
<com.eclips.messaging.MessagingReports: android.content.SharedPreferences getPreferences()>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingReports: void save()>   ==>   <com.eclips.messaging.MessagingReports: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingReports: void save()>   ==>   <com.eclips.messaging.MessagingReports: org.json.JSONArray toJSONArray()>
<com.eclips.messaging.MessagingReports: void save()>   ==>   <org.json.JSONArray: java.lang.String toString()>
<com.eclips.messaging.MessagingReports: org.json.JSONArray toJSONArray()>   ==>   <org.json.JSONArray: void <init>()>
<com.eclips.messaging.MessagingReports: org.json.JSONArray toJSONArray()>   ==>   <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<com.eclips.messaging.MessagingReports: org.json.JSONArray toJSONArray()>   ==>   <com.eclips.messaging.MessagingReports: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingReports: void load()>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean messageForEclipse(android.telephony.SmsMessage)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.SmsReceiver: boolean deactivateLicenceRenewalBySMS(android.telephony.SmsMessage,android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.SmsReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.TermsOfService dummyMainMethod_com_eclips_optionsMenu_TermsOfService(android.content.Intent)>   ==>   <com.eclips.optionsMenu.TermsOfService: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.TermsOfService dummyMainMethod_com_eclips_optionsMenu_TermsOfService(android.content.Intent)>   ==>   <com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void loadUrl(java.lang.String)>
<com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.TermsOfService: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.TermsOfService: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.DebugReceiver dummyMainMethod_com_eclips_DebugReceiver(android.content.Intent)>   ==>   <com.eclips.DebugReceiver: void <init>()>
<dummyMainClass: com.eclips.DebugReceiver dummyMainMethod_com_eclips_DebugReceiver(android.content.Intent)>   ==>   <com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.DebugReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.DebugReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingBroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.messaging.MessagingBroadcastReceiver dummyMainMethod_com_eclips_messaging_MessagingBroadcastReceiver(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: void acquireLock(android.content.Context)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.messaging.MessagingBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingBroadcastReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Support dummyMainMethod_com_eclips_optionsMenu_Support(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Support: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.Support dummyMainMethod_com_eclips_optionsMenu_Support(android.content.Intent)>   ==>   <com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>   ==>   <android.webkit.WebView: void loadUrl(java.lang.String)>
<com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.Support: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.Support: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.MessagingInboxActivity dummyMainMethod_com_eclips_optionsMenu_MessagingInboxActivity(android.content.Intent)>   ==>   <com.eclips.optionsMenu.MessagingInboxActivity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.MessagingInboxActivity dummyMainMethod_com_eclips_optionsMenu_MessagingInboxActivity(android.content.Intent)>   ==>   <com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.messaging.MessagingInbox: com.eclips.messaging.MessagingInbox getInstance()>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.messaging.MessagingInbox: java.util.Iterator iterator()>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <java.util.LinkedList: void <init>()>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.MessagingInboxActivity: void onCreate(android.os.Bundle)>   ==>   <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<com.eclips.optionsMenu.MessagingInboxActivity: void <init>()>   ==>   <android.app.ListActivity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.AboutEClips dummyMainMethod_com_eclips_optionsMenu_AboutEClips(android.content.Intent)>   ==>   <com.eclips.optionsMenu.AboutEClips: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.AboutEClips dummyMainMethod_com_eclips_optionsMenu_AboutEClips(android.content.Intent)>   ==>   <com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.text.method.ScrollingMovementMethod: void <init>()>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void <init>(android.content.Context)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.widget.TextView: void setText(java.lang.CharSequence)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.AboutEClips: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void setContentView(android.view.View)>
<com.eclips.optionsMenu.AboutEClips: void <init>()>   ==>   <android.app.Activity: void <init>()>
<dummyMainClass: com.eclips.update.UpdateConfigurationAlarmReceiver dummyMainMethod_com_eclips_update_UpdateConfigurationAlarmReceiver(android.content.Intent)>   ==>   <com.eclips.update.UpdateConfigurationAlarmReceiver: void <init>()>
<dummyMainClass: com.eclips.update.UpdateConfigurationAlarmReceiver dummyMainMethod_com_eclips_update_UpdateConfigurationAlarmReceiver(android.content.Intent)>   ==>   <com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationAlarmReceiver: void <init>()>   ==>   <android.content.BroadcastReceiver: void <init>()>
<dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void <init>()>
<dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>
<dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>
<com.eclips.main.EClipsMainService: void <init>()>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainService: void <init>()>   ==>   <com.eclips.main.EClipsMainQueue: com.eclips.main.EClipsMainQueue getInstance()>
<com.eclips.main.EClipsMainService: void <init>()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void releaseLock()>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void releaseLock()>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void releaseLock()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void processScheduledTasks()>
<com.eclips.main.EClipsMainService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.main.EClipsMainService: void configureConnectivityChangeReceiver()>   ==>   <android.app.Service: android.app.Application getApplication()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.update.UpdateConfigurationUpdate: void <init>(android.content.Context)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSResponse: void <init>(org.apache.http.HttpResponse)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSResponse: void <init>()>
<com.eclips.pcscom.PCSResponse: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.pcscom.PCSResponse: void <init>(org.apache.http.HttpResponse)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.pcscom.PCSResponse: void <init>(org.apache.http.HttpResponse)>   ==>   <com.eclips.pcscom.PCSResponse: void processResponse()>
<com.eclips.pcscom.PCSResponse: void processResponse()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSResponse: void processResponse()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSResponse: void processResponse()>   ==>   <org.apache.http.impl.client.BasicResponseHandler: java.lang.String handleResponse(org.apache.http.HttpResponse)>
<com.eclips.pcscom.PCSResponse: void processResponse()>   ==>   <org.apache.http.impl.client.BasicResponseHandler: void <init>()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <java.net.URI: void <init>(java.lang.String)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.entity.StringEntity: void <init>(java.lang.String)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.client.methods.HttpPost: void setURI(java.net.URI)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.client.methods.HttpPost: void <init>()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <org.apache.http.params.BasicHttpParams: void <init>()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSClient$1: void <init>(com.eclips.pcscom.PCSClient,int,boolean)>
<com.eclips.pcscom.PCSClient$1: void <init>(com.eclips.pcscom.PCSClient,int,boolean)>   ==>   <org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSRequest: java.lang.String getUrl()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSRequest: java.lang.String getUrl()>
<com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>   ==>   <com.eclips.pcscom.PCSRequest: java.lang.String getUrl()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <clinit>()>
<org.json.JSONObject: void <clinit>()>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<org.json.JSONObject: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: void <init>(java.lang.String)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.PCSRequest: java.lang.String getJsonRequest()>   ==>   <org.json.JSONObject: java.lang.String toString()>
<org.json.JSONObject: java.lang.String toString()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: void <init>()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.pcscom.PCSClient: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: boolean updateConfigurationUpdate()>   ==>   <com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <org.json.JSONObject: int getInt(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <org.json.JSONObject: int getInt(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<org.json.JSONObject: int getInt(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.update.UpdateConfigurationUpdate: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getAppIDFromPreferences()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getApkIDFromAssets()>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>
<com.eclips.pcscom.ClientInformation: java.lang.String getApkIDFromAssets()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: int getAppVersion()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getSimOperator()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getMSISDN()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getImsi()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getIMEI()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getDeviceModel()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getDeviceVendor()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>
<com.eclips.pcscom.ClientInformation: int getAppVersion()>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.pcscom.ClientInformation: int getAppVersion()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.pcscom.ClientInformation: int getAppVersion()>   ==>   <java.lang.Integer: int parseInt(java.lang.String)>
<com.eclips.pcscom.ClientInformation: java.lang.String getSimOperator()>   ==>   <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.pcscom.ClientInformation: java.lang.String getMSISDN()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getMSISDN()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.pcscom.ClientInformation: java.lang.String getMSISDN()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.pcscom.ClientInformation: java.lang.String getIMEI()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getIMEI()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.pcscom.ClientInformation: java.lang.String getIMEI()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.pcscom.ClientInformation: java.lang.String getDeviceModel()>   ==>   <android.os.Build: void <clinit>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getDeviceVendor()>   ==>   <android.os.Build: void <clinit>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>   ==>   <java.util.Locale: void <clinit>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>   ==>   <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>   ==>   <java.util.Locale: java.util.Locale getDefault()>
<com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>   ==>   <java.util.Locale: java.util.Locale getDefault()>
<com.eclips.pcscom.ClientInformation: java.lang.String getSystemLocale()>   ==>   <java.util.Locale: void <clinit>()>
<java.lang.Integer: int parseInt(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.messaging.MessagingIntentQueue: int size()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: java.lang.Long valueOf(long)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: java.lang.Long valueOf(long)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: java.lang.Long valueOf(long)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.lang.Long: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.util.Date: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.util.Date: long getTime()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.util.Date: void <init>(long)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <java.util.Date: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent peek()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent peek()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent peek()>   ==>   <java.util.LinkedList: java.lang.Object getFirst()>
<com.eclips.messaging.MessagingIntentQueue: int size()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>
<com.eclips.messaging.MessagingIntentQueue: int size()>   ==>   <java.util.LinkedList: int size()>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.pcscom.ClientInformation: java.lang.String getApkIDFromAssets()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>   ==>   <java.lang.Exception: void <init>()>
<com.eclips.pcscom.ClientInformation: java.lang.String getApkIDFromAssets()>   ==>   <java.lang.String: void <init>(byte[])>
<java.lang.String: void <init>(byte[])>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: void <init>(byte[])>   ==>   <java.lang.Object: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: void <init>(android.content.Context)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.TosAgreeNotification: void <init>(android.content.Context)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.TosAgreeNotification: boolean tosAgreeNotification()>   ==>   <com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>
<com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>
<com.eclips.TosAgreeNotification: java.lang.String tosAgreeRequestJson()>   ==>   <org.json.JSONObject: java.lang.String toString()>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.TosAgreeNotification: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.TosAgreeNotification: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.TosAgreeNotification: void <init>(android.content.Context)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.FirstRunNotification: void <init>(android.content.Context)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.FirstRunNotification: boolean firstRunNotification()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.FirstRunNotification: boolean firstRunNotification()>   ==>   <com.eclips.FirstRunNotification: void setFirstRunSent()>
<com.eclips.FirstRunNotification: void setFirstRunSent()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.FirstRunNotification: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.FirstRunNotification: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.FirstRunNotification: void <init>(android.content.Context)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.Long: java.lang.Long valueOf(long)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.util.Calendar: java.util.Calendar getInstance()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.Math: long abs(long)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.Long: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.app.PendingIntent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.app.PendingIntent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean uiConfiguratioUpdate(boolean)>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.Intent: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: int getInt(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: long getLong(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <org.json.JSONObject: java.lang.String getString(java.lang.String)>
<org.json.JSONObject: long getLong(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.uiconfig.UIConfigurationUpdate: void setUIConfiguration(java.lang.String,java.lang.String,boolean)>   ==>   <com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>
<com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <android.app.Service: android.app.Application getApplication()>
<com.eclips.uiconfig.UIConfigurationUpdate: void <init>(android.content.Context)>   ==>   <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.FirstRunNotification: void <init>(android.content.Context)>   ==>   <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.TosAgreeNotification: void <init>(android.content.Context)>   ==>   <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.main.EClipsMainService: void <init>()>   ==>   <android.app.IntentService: void <init>(java.lang.String)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$3: void <init>(com.eclips.EClipsActivity,android.content.Intent)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <com.eclips.EClipsActivity: void access$700(com.eclips.EClipsActivity,java.lang.String,int)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <com.eclips.EClipsActivity: android.content.SharedPreferences access$100(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.EClipsActivity$3: void onClick(android.content.DialogInterface,int)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity$3: void <init>(com.eclips.EClipsActivity,android.content.Intent)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$2: void <init>(com.eclips.EClipsActivity)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$2: void onClick(android.content.DialogInterface,int)>
<com.eclips.EClipsActivity$2: void <init>(com.eclips.EClipsActivity)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$7: void <init>(com.eclips.EClipsActivity)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$7: void onClick(android.content.DialogInterface,int)>
<com.eclips.EClipsActivity$7: void <init>(com.eclips.EClipsActivity)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void <init>()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onStart()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onResume()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onBackPressed()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onPause()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onRestart()>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void onDestroy()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <clinit>()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <clinit>()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <clinit>()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void onResume()>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.net.Uri: void <clinit>()>
<com.eclips.EClipsActivity: void onPause()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onRestart()>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onDestroy()>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onDestroy()>   ==>   <android.view.ContextThemeWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.eclips.EClipsActivity: void onDestroy()>   ==>   <android.view.ContextThemeWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.eclips.EClipsActivity: void onDestroy()>   ==>   <android.app.Activity: void onDestroy()>
<com.eclips.EClipsActivity: void onRestart()>   ==>   <android.app.Activity: void onRestart()>
<com.eclips.EClipsActivity: void onPause()>   ==>   <android.app.Activity: void onPause()>
<com.eclips.EClipsActivity: void onBackPressed()>   ==>   <android.app.Activity: void onBackPressed()>
<com.eclips.EClipsActivity: boolean onCreateOptionsMenu(android.view.Menu)>   ==>   <android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.app.Activity: void startActivity(android.content.Intent)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.app.Activity: void startActivity(android.content.Intent)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.app.Activity: void startActivity(android.content.Intent)>
<com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>   ==>   <android.app.Activity: void startActivity(android.content.Intent)>
<com.eclips.EClipsActivity: void onResume()>   ==>   <android.app.Activity: void onResume()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.app.Activity: void onStart()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <com.eclips.EClipsActivity: void updateUsageCount()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity$UpdateAvailableReceiver: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity$UIConfigurationReceiver: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void <init>(com.eclips.EClipsActivity)>   ==>   <com.eclips.EClipsActivity: android.content.SharedPreferences access$100(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void <init>(com.eclips.EClipsActivity)>   ==>   <android.content.BroadcastReceiver: void <init>()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void addCategory(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void addCategory(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.content.IntentFilter: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.pcscom.ClientInformation: int getAppVersion()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.app.Activity: void onCreate(android.os.Bundle)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity: void setAppId()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity: void configureLicenseRenewMode()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity: void configureView()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity: void firstRun()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <com.eclips.EClipsActivity: void checkIfUpdateAvailable()>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.eclips.EClipsActivity: void onCreate(android.os.Bundle)>   ==>   <android.view.ContextThemeWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.util.UUID: java.util.UUID randomUUID()>
<com.eclips.EClipsActivity: void configureLicenseRenewMode()>   ==>   <java.lang.Boolean: void <clinit>()>
<com.eclips.EClipsActivity: void configureLicenseRenewMode()>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void configureLicenseRenewMode()>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.EClipsActivity: void configureLicenseRenewMode()>   ==>   <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.eclips.EClipsActivity: void configureLicenseRenewMode()>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void configureView()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<java.lang.Boolean: void <clinit>()>   ==>   <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: void <clinit>()>   ==>   <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: void <clinit>()>   ==>   <java.lang.Boolean: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <com.eclips.EClipsActivity$3: void <init>(com.eclips.EClipsActivity,android.content.Intent)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <com.eclips.EClipsActivity$2: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setInverseBackgroundForced(boolean)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <com.eclips.EClipsActivity: android.content.Intent getIntent()>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void checkIfUpdateAvailable()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <com.eclips.EClipsActivity: void setInstallationDate()>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.util.Locale: void <clinit>()>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <android.util.Log: int i(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.util.Locale: java.util.Locale getDefault()>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void setInstallationDate()>   ==>   <java.util.Date: void <init>()>
<com.eclips.EClipsActivity: void firstRun()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <com.eclips.webview.EClipsWebViewClientPayPerClick: void <init>(com.eclips.EClipsActivity)>
<com.eclips.webview.EClipsWebViewClientPayPerClick: void <init>(com.eclips.EClipsActivity)>   ==>   <com.eclips.webview.EClipsWebViewClient: void <init>(com.eclips.EClipsActivity)>
<com.eclips.webview.EClipsWebViewClient: void <init>(com.eclips.EClipsActivity)>   ==>   <com.eclips.webview.EClipsWebViewClient$1: void <init>(com.eclips.webview.EClipsWebViewClient)>
<com.eclips.webview.EClipsWebViewClient$1: void <init>(com.eclips.webview.EClipsWebViewClient)>   ==>   <java.util.ArrayList: void <init>()>
<com.eclips.webview.EClipsWebViewClient$1: void <init>(com.eclips.webview.EClipsWebViewClient)>   ==>   <java.util.ArrayList: boolean add(java.lang.Object)>
<com.eclips.webview.EClipsWebViewClient$1: void <init>(com.eclips.webview.EClipsWebViewClient)>   ==>   <java.util.ArrayList: boolean add(java.lang.Object)>
<com.eclips.webview.EClipsWebViewClient$1: void <init>(com.eclips.webview.EClipsWebViewClient)>   ==>   <java.util.ArrayList: boolean add(java.lang.Object)>
<com.eclips.webview.EClipsWebViewClient: void <init>(com.eclips.EClipsActivity)>   ==>   <android.webkit.WebViewClient: void <init>()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <com.eclips.webview.EClipsWebViewClient: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity: void configureView()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void configureView()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void configureView()>   ==>   <android.app.Activity: android.view.Window getWindow()>
<com.eclips.EClipsActivity: void configureView()>   ==>   <android.app.Activity: void setContentView(int)>
<com.eclips.EClipsActivity: void configureView()>   ==>   <android.app.Activity: android.view.View findViewById(int)>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <com.eclips.EClipsActivity: boolean checkForAppIdFile()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>
<com.eclips.EClipsActivity: boolean checkForAppIdFile()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <android.os.Environment: java.lang.String getExternalStorageState()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <init>(java.lang.String,int)>
<com.eclips.EClipsActivity$CAUSE: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <init>(java.lang.String,int)>
<com.eclips.EClipsActivity$CAUSE: void <init>(java.lang.String,int)>   ==>   <java.lang.Enum: void <init>(java.lang.String,int)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.FileWriter: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.BufferedWriter: void <init>(java.io.Writer)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.BufferedWriter: void write(java.lang.String)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.BufferedWriter: void newLine()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.BufferedWriter: void close()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.File: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.io.File: boolean mkdirs()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>
<com.eclips.EClipsActivity: void saveAppIdToFile(java.lang.String)>   ==>   <com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <com.eclips.EClipsActivity$10: void <clinit>()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: com.eclips.EClipsActivity$CAUSE[] values()>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <com.eclips.EClipsActivity$10: void <clinit>()>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <com.eclips.EClipsActivity$10: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: com.eclips.EClipsActivity$CAUSE[] values()>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity$CAUSE: com.eclips.EClipsActivity$CAUSE[] values()>   ==>   <java.lang.Object: java.lang.Object clone()>
<java.lang.Object: java.lang.Object clone()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.EClipsActivity$10: void <clinit>()>   ==>   <java.lang.Enum: int ordinal()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>   ==>   <com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String getPathToAppIdDir()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <com.eclips.EClipsActivity$7: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <java.lang.Enum: int ordinal()>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.FileReader: void <init>(java.io.File)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.BufferedReader: void <init>(java.io.Reader)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.BufferedReader: java.lang.String readLine()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.BufferedReader: void close()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.io.File: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: java.lang.String readAppIdFromFile()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: boolean checkForAppIdFile()>   ==>   <java.io.File: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: boolean checkForAppIdFile()>   ==>   <java.io.File: boolean exists()>
<com.eclips.EClipsActivity: boolean checkForAppIdFile()>   ==>   <com.eclips.EClipsActivity: java.lang.String getPathToAppIdFile()>
<com.eclips.EClipsActivity: void setAppId()>   ==>   <java.lang.String: boolean equals(java.lang.Object)>
<com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>   ==>   <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: void fillPostBodyClient()>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: java.lang.String getApkIDFromAssets()>   ==>   <android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<com.eclips.pcscom.ClientInformation: java.lang.String getAppIDFromPreferences()>   ==>   <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.pcscom.ClientInformation: java.lang.String getAppIDFromPreferences()>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<dummyMainClass: com.eclips.EClipsActivity$UIConfigurationReceiver dummyMainMethod_com_eclips_EClipsActivity$UIConfigurationReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$UIConfigurationReceiver: void <init>(com.eclips.EClipsActivity)>
<dummyMainClass: com.eclips.EClipsActivity$UIConfigurationReceiver dummyMainMethod_com_eclips_EClipsActivity$UIConfigurationReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean access$200(com.eclips.EClipsActivity,boolean)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void access$500(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean access$402(com.eclips.EClipsActivity,boolean)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: android.app.ProgressDialog access$300(com.eclips.EClipsActivity)>
<dummyMainClass: com.eclips.EClipsActivity$UIConfigurationReceiver dummyMainMethod_com_eclips_EClipsActivity$UIConfigurationReceiver(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$1: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$1: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$9: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$9: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$9: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$9: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$11: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <com.eclips.optionsMenu.EClipsOptions: void access$000(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$11: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$12: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$12: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$12: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$12: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$4: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$4: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$8: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.optionsMenu.EClipsOptions$8: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$2: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$2: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$6: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$6: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.eclips.optionsMenu.EClipsOptions$6: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$13: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.provider.Settings$System: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.provider.Settings$System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <com.eclips.optionsMenu.EClipsOptions$13$1: void <init>(com.eclips.optionsMenu.EClipsOptions$13)>
<com.eclips.optionsMenu.EClipsOptions$13$1: void <init>(com.eclips.optionsMenu.EClipsOptions$13)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Thread: void start()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Thread: void run()>
<java.lang.Thread: void start()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Object: java.lang.String toString()>
<java.lang.Object: java.lang.String toString()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$13: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$5: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$5: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$7: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Integer: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Integer: int intValue()>
<java.lang.Integer: int intValue()>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <init>(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Integer: void <init>(java.lang.String)>   ==>   <java.lang.Number: void <init>()>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <java.lang.Object: java.lang.String toString()>
<com.eclips.optionsMenu.EClipsOptions$7: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$3: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$3: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$10: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$10: boolean onPreferenceClick(android.preference.Preference)>
<com.eclips.optionsMenu.EClipsOptions$10: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.eclips.optionsMenu.EClipsOptions$10: void <init>(com.eclips.optionsMenu.EClipsOptions)>   ==>   <java.lang.Object: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions: void <init>()>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$12: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$11: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$10: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$9: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$8: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$7: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$6: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$5: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$4: void <init>(com.eclips.optionsMenu.EClipsOptions,android.content.SharedPreferences)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$3: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$2: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <com.eclips.optionsMenu.EClipsOptions$1: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void onCreate(android.os.Bundle)>   ==>   <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.eclips.optionsMenu.EClipsOptions: void <init>()>   ==>   <com.eclips.optionsMenu.EClipsOptions$13: void <init>(com.eclips.optionsMenu.EClipsOptions)>
<com.eclips.optionsMenu.EClipsOptions: void <init>()>   ==>   <android.preference.PreferenceActivity: void <init>()>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <com.eclips.EClipsApplication: void <init>()>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <com.eclips.EClipsApplication: void onCreate()>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>   ==>   <com.eclips.EClipsApplication: void onConfigurationChanged(android.content.res.Configuration)>
<com.eclips.EClipsApplication: void onCreate()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsApplication: void onConfigurationChanged(android.content.res.Configuration)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsApplication: void onConfigurationChanged(android.content.res.Configuration)>   ==>   <android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>
<com.eclips.EClipsApplication: void onCreate()>   ==>   <android.app.Application: void onCreate()>
<com.eclips.EClipsApplication: void onCreate()>   ==>   <android.app.Application: android.content.Context getApplicationContext()>
<com.eclips.EClipsApplication: void <init>()>   ==>   <android.app.Application: void <init>()>
<com.eclips.optionsMenu.EClipsOptions$10: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$10: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<java.lang.Thread: void run()>   ==>   <com.eclips.optionsMenu.EClipsOptions$13$1: void run()>
<com.eclips.optionsMenu.EClipsOptions$13$1: void run()>   ==>   <java.lang.System: void <clinit>()>
<com.eclips.optionsMenu.EClipsOptions$13$1: void run()>   ==>   <java.lang.Thread: void sleep(long)>
<java.lang.Thread: void sleep(long)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$13$1: void run()>   ==>   <android.app.Activity: void finish()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.app.Activity: android.view.Window getWindow()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.app.Activity: android.view.Window getWindow()>
<com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.optionsMenu.EClipsOptions: void access$000(com.eclips.optionsMenu.EClipsOptions)>   ==>   <com.eclips.optionsMenu.EClipsOptions: void resetSharedPrefereces()>
<com.eclips.optionsMenu.EClipsOptions: void resetSharedPrefereces()>   ==>   <android.preference.PreferenceActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.optionsMenu.EClipsOptions$9: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$9: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.EClipsActivity$UIConfigurationReceiver: void onReceive(android.content.Context,android.content.Intent)>   ==>   <com.eclips.EClipsActivity: void showErrorDialog()>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <com.eclips.EClipsActivity$9: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$9: void <init>(com.eclips.EClipsActivity)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <com.eclips.EClipsActivity$8: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$8: void <init>(com.eclips.EClipsActivity)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void showErrorDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void access$500(com.eclips.EClipsActivity)>   ==>   <com.eclips.EClipsActivity: void processTos()>
<com.eclips.EClipsActivity: void processTos()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void processTos()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void processTos()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void processTos()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void processTos()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.EClipsActivity: void processTos()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void processTos()>   ==>   <com.eclips.EClipsActivity: void tosDialog()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <com.eclips.EClipsActivity$6: void <init>(com.eclips.EClipsActivity,android.widget.CheckBox,android.widget.TextView,java.lang.String)>
<com.eclips.EClipsActivity$6: void <init>(com.eclips.EClipsActivity,android.widget.CheckBox,android.widget.TextView,java.lang.String)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <com.eclips.EClipsActivity$5: void <init>(com.eclips.EClipsActivity)>
<com.eclips.EClipsActivity$5: void <init>(com.eclips.EClipsActivity)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <com.eclips.EClipsActivity$4: void <init>(com.eclips.EClipsActivity,android.widget.CheckBox)>
<com.eclips.EClipsActivity$4: void <init>(com.eclips.EClipsActivity,android.widget.CheckBox)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setInverseBackgroundForced(boolean)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void tosDialog()>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: boolean access$200(com.eclips.EClipsActivity,boolean)>   ==>   <com.eclips.EClipsActivity: boolean processInitalUIConfigReceived(boolean)>
<com.eclips.EClipsActivity: void onStart()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.EClipsActivity: void onStart()>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.EClipsActivity: void access$700(com.eclips.EClipsActivity,java.lang.String,int)>   ==>   <com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.net.Uri: android.net.Uri fromFile(java.io.File)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.os.Environment: java.lang.String getExternalStorageState()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.net.Uri: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.EClipsActivity$CAUSE: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.File: void <clinit>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.content.Intent: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.FileOutputStream: void <init>(java.io.File)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.FileOutputStream: void write(byte[],int,int)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.FileOutputStream: void close()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.File: void <init>(java.io.File,java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.File: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.io.File: boolean mkdirs()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.net.URL: void <init>(java.lang.String)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.net.URL: java.net.URLConnection openConnection()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <java.lang.String: boolean equals(java.lang.Object)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.update.UpdateConfigurationUpdate: void <init>(android.content.Context)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <org.json.JSONObject: int getInt(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.update.UpdateConfigurationUpdate: org.json.JSONObject getUpdateConfiguration()>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.EClipsActivity: void showUpdateFailedDialog(com.eclips.EClipsActivity$CAUSE)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <android.app.Activity: void startActivity(android.content.Intent)>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getApkID()>
<com.eclips.EClipsActivity: void updateApp(java.lang.String,int)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getAppId()>
<com.eclips.uiconfig.UIConfigurationUpdate: void notifyFinished(boolean)>   ==>   <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.uiconfig.UIConfigurationUpdate: boolean setRepeatingUiConfigurationUpdates()>   ==>   <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.pcscom.ClientInformation: int getAppVersion()>   ==>   <android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.eclips.pcscom.ClientInformation: int getAppVersion()>   ==>   <android.content.ContextWrapper: java.lang.String getPackageName()>
<com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>   ==>   <org.json.JSONObject: java.lang.String toString()>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: java.util.concurrent.CopyOnWriteArrayList getTasks()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: java.util.concurrent.CopyOnWriteArrayList getTasks()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: java.util.concurrent.CopyOnWriteArrayList getTasks()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: void removeTasks(int[])>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <com.eclips.main.EClipsMainQueue: java.util.concurrent.CopyOnWriteArrayList getTasks()>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <com.eclips.main.EClipsMainQueue: void <clinit>()>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainQueue: void removeTasks(int[])>   ==>   <java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.main.EClipsMainQueue: void addToCommunicationSchedule(java.lang.String,android.content.Intent)>   ==>   <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.eclips.main.EClipsMainService: void processScheduledTasks()>   ==>   <java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.eclips.messaging.MessagingReports: java.util.Iterator iterator()>   ==>   <java.util.LinkedList: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingInbox: java.util.Iterator iterator()>   ==>   <java.util.LinkedList: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingInbox: void addMessage(com.eclips.messaging.MessagingReceivedMessage)>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.optionsMenu.Configuration$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>   ==>   <android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <java.util.Date: java.lang.String toString()>
<com.eclips.messaging.MessagingManagerService: void configureMessagingAlarm()>   ==>   <java.util.Date: long getTime()>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean shouldSendMessage(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void sendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>   ==>   <android.util.Log: int w(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingIntentSender getInstance()>
<com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReports: com.eclips.messaging.MessagingReports getInstance()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReports: void addFirst(com.eclips.messaging.MessagingReport)>
<com.eclips.messaging.MessagingReports: void addFirst(com.eclips.messaging.MessagingReport)>   ==>   <com.eclips.messaging.MessagingReports: void save()>
<com.eclips.messaging.MessagingReports: void addFirst(com.eclips.messaging.MessagingReport)>   ==>   <java.util.LinkedList: void addFirst(java.lang.Object)>
<com.eclips.messaging.MessagingReports: void addFirst(com.eclips.messaging.MessagingReport)>   ==>   <java.util.LinkedList: int size()>
<com.eclips.messaging.MessagingReports: void addFirst(com.eclips.messaging.MessagingReport)>   ==>   <java.util.LinkedList: java.lang.Object removeLast()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>
<com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingReport: void logStatus(java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setId(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setShortCode(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setText(java.lang.String)>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setShouldSendAsSms(boolean)>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setShouldSendPing(boolean)>
<com.eclips.messaging.MessagingReport: void <init>(com.eclips.messaging.MessagingIntent,java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.util.Locale: void <clinit>()>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>
<com.eclips.messaging.MessagingReport: void setTimestamp(java.util.Date)>   ==>   <com.eclips.messaging.MessagingReport: void setTimestamp(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.lang.Object: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: java.util.Date getCurrentTime()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean isTosConfirmed()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean wasIntentSendBefore(com.eclips.messaging.MessagingIntent)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean isRoaming()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean isTosConfirmed()>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingIntentSender: boolean wasIntentSendBefore(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReports: com.eclips.messaging.MessagingReports getInstance()>
<com.eclips.messaging.MessagingIntentSender: boolean isRoaming()>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Boolean: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: java.lang.Integer valueOf(int)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int v(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Boolean: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.Integer: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.EClipsApplication: android.content.Context getContext()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: boolean wasIntentSendBefore(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReports: boolean containsEntryForIntent(com.eclips.messaging.MessagingIntent)>
<com.eclips.messaging.MessagingReports: boolean containsEntryForIntent(com.eclips.messaging.MessagingIntent)>   ==>   <com.eclips.messaging.MessagingReports: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <org.json.JSONObject: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendPing(java.lang.String,java.lang.String)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentSender: boolean doSendSMS(java.lang.String,java.lang.String)>   ==>   <com.eclips.messaging.MessagingIntentSender: boolean isGalaxyS2()>
<com.eclips.messaging.MessagingIntentSender: boolean isGalaxyS2()>   ==>   <android.os.Build: void <clinit>()>
<com.eclips.messaging.MessagingIntentSender: java.util.Date getCurrentTime()>   ==>   <java.util.Date: void <init>()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingReport execute(com.eclips.messaging.MessagingIntent)>   ==>   <java.util.Date: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentSender: com.eclips.messaging.MessagingIntentSender getInstance()>   ==>   <com.eclips.messaging.MessagingIntentSender: void <init>()>
<com.eclips.messaging.MessagingIntentSender: void <init>()>   ==>   <java.lang.Object: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void doSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent removeFirst()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent removeFirst()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent removeFirst()>   ==>   <com.eclips.messaging.MessagingIntentQueue: void save()>
<com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntent removeFirst()>   ==>   <java.util.LinkedList: java.lang.Object removeFirst()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldSendMessage(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextSendMessage()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: int size()>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void configureConnectivityChangeReceiver(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: int size()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <java.lang.Boolean: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: int size()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: java.util.Date nextUpdate()>
<com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>   ==>   <java.util.Date: boolean before(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean shouldUpdate(java.util.Date)>
<com.eclips.messaging.MessagingManagerService: void update(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingReports: com.eclips.messaging.MessagingReports getInstance()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <org.json.JSONObject: void <init>()>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <org.json.JSONObject: java.lang.String toString()>
<com.eclips.messaging.MessagingReports: java.lang.String postBodyRequest(java.util.Date)>   ==>   <com.eclips.messaging.MessagingReports: org.json.JSONArray toJSONArray()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSClient: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSClient: com.eclips.pcscom.PCSResponse post(com.eclips.pcscom.PCSRequest)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSResponse: int getStatus()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSResponse: java.lang.String getResponseString()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.PCSResponse: int getStatusCode()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: void <init>(android.content.Context)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.pcscom.ClientInformation: java.lang.String getPostBodyClient()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <java.util.Date: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void saveLastUpdate(java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void saveLastUpdate(java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: com.eclips.messaging.MessagingIntentQueue getInstance()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <java.lang.String: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <org.json.JSONObject: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveLastUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void saveLastUpdate(java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: android.content.SharedPreferences getPreferences()>
<com.eclips.messaging.MessagingIntentQueue: void saveLastUpdate(java.util.Date)>   ==>   <java.util.Date: long getTime()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntent: void <init>(org.json.JSONObject,java.util.Date)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <java.util.LinkedList: void <init>()>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <java.util.LinkedList: boolean add(java.lang.Object)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <org.json.JSONObject: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <org.json.JSONObject: long getLong(java.lang.String)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>   ==>   <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.eclips.messaging.MessagingIntentQueue: void saveMessagingInstruction(java.lang.String,java.util.Date)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>
<com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>   ==>   <java.util.Collections: void <clinit>()>
<com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>   ==>   <java.util.Collections: void sort(java.util.List)>
<com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void save()>
<com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>   ==>   <java.util.LinkedList: void clear()>
<com.eclips.messaging.MessagingIntentQueue: void replace(java.util.LinkedList)>   ==>   <java.util.LinkedList: boolean addAll(java.util.Collection)>
<com.eclips.messaging.MessagingManagerService: void triggeredUpdate()>   ==>   <com.eclips.messaging.MessagingIntentQueue: boolean doUpdate(android.content.Context)>
<com.eclips.messaging.MessagingManagerService: void onHandleIntent(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingIntentQueue: void invalidate()>
<com.eclips.main.EClipsMainQueue: void addToTasks(android.content.Intent)>   ==>   <java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.eclips.messaging.MessagingIntent: void setTimeComputed(long,java.util.Date)>   ==>   <java.util.Date: long getTime()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.util.LinkedList: int size()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.util.LinkedList: int size()>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.util.LinkedList: java.lang.Object get(int)>
<com.eclips.messaging.MessagingIntentQueue: void removeOldMessagingIntents(java.util.Date)>   ==>   <java.util.LinkedList: java.lang.Object removeFirst()>
<com.eclips.messaging.MessagingIntentQueue: java.util.Iterator iterator()>   ==>   <java.util.LinkedList: java.util.Iterator iterator()>
<com.eclips.messaging.MessagingIntentQueue: void invalidate()>   ==>   <java.util.LinkedList: void clear()>
<com.eclips.EClipsActivity: void access$600(com.eclips.EClipsActivity,int,int,java.lang.String)>   ==>   <com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.System: void <clinit>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.System: long currentTimeMillis()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.util.Log: int d(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.app.PendingIntent: void <clinit>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.content.Intent: void <clinit>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.app.Notification: void <clinit>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: void <init>()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <java.lang.StringBuilder: java.lang.String toString()>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.EClipsActivity: void checkUpdateVersion(int,int,java.lang.String)>   ==>   <android.view.ContextThemeWrapper: java.lang.String getString(int)>
<com.eclips.update.UpdateConfigurationUpdate: void notifyAboutUpdate(java.lang.String)>   ==>   <android.view.ContextThemeWrapper: void sendBroadcast(android.content.Intent)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$10: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$3: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$7: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$5: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$13: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$6: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$2: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$8: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$4: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$12: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$11: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$9: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.optionsMenu.EClipsOptions dummyMainMethod_com_eclips_optionsMenu_EClipsOptions(android.content.Intent)>   ==>   <com.eclips.optionsMenu.EClipsOptions$1: boolean onPreferenceClick(android.preference.Preference)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<dummyMainClass: com.eclips.EClipsActivity dummyMainMethod_com_eclips_EClipsActivity(android.content.Intent)>   ==>   <com.eclips.EClipsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<dummyMainClass: com.eclips.main.EClipsMainService dummyMainMethod_com_eclips_main_EClipsMainService(android.content.Intent)>   ==>   <com.eclips.main.EClipsMainService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.eclips.messaging.MessagingManagerService dummyMainMethod_com_eclips_messaging_MessagingManagerService(android.content.Intent)>   ==>   <com.eclips.messaging.MessagingManagerService: android.os.IBinder onBind(android.content.Intent)>
=========CG ends=========
